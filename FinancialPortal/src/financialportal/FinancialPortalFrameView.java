package financialportal;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.util.TableOrder;

/**
 *
 * @author Christian Kasel
 */
public class FinancialPortalFrameView extends javax.swing.JFrame {

    private static ArrayList<JButton> buttons;

    /**
     * Creates new form PortalFrame
     */
    public FinancialPortalFrameView() {
        initComponents();
        buttons = new ArrayList<>();
        buttons.add(accountsPageTitleButton);
        buttons.add(budgetsPageTitleButton);
        buttons.add(loansPageTitleButton);
        buttons.add(spendingsPageTitleButton);
        buttons.add(transactionsPageTitleButton);
        buttons.add(trendsPageTitleButton);
    }

    /**
     * Function to select the page the user selected
     *
     * @param pageIndex the index of the page the user selected
     */
    public void enablePage(int pageIndex) {
        tabbedPane.setSelectedIndex(pageIndex);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        homePagePanel = new javax.swing.JPanel();
        homePageTitle = new javax.swing.JLabel();
        homePageTextPane = new javax.swing.JScrollPane();
        homePageTextArea = new javax.swing.JTextArea();
        accountsPagePanel = new javax.swing.JPanel();
        accountsPageTitlePanel = new javax.swing.JPanel();
        accountsPagePanelTitle = new javax.swing.JLabel();
        accountsPageTitleButton = new javax.swing.JButton();
        accountsPageComboBox = new javax.swing.JComboBox<>();
        accountsPageTablePanel = new javax.swing.JPanel();
        accountsPageTableScrollPane = new javax.swing.JScrollPane();
        accountsPageTable = new javax.swing.JTable();
        accountsPageBriefingPane = new javax.swing.JScrollPane();
        accountsPageBriefingTextArea = new javax.swing.JTextArea();
        accountsPageHelpPane = new javax.swing.JScrollPane();
        accountsPageHelpTetArea = new javax.swing.JTextArea();
        budgetsPagePanel = new javax.swing.JPanel();
        budgetsPageTitlePanel = new javax.swing.JPanel();
        budgetsPageTitle = new javax.swing.JLabel();
        budgetsPageTitleButton = new javax.swing.JButton();
        budgetsPageComboBox = new javax.swing.JComboBox<>();
        budgetsPageGraphPanel = new javax.swing.JPanel();
        budgetsPageTextScrollPane = new javax.swing.JScrollPane();
        budgetsPageBriefingTextArea = new javax.swing.JTextArea();
        budgetsPageHelpScrollArea = new javax.swing.JScrollPane();
        budgetsPageHelpTextArea = new javax.swing.JTextArea();
        loansPagePanel = new javax.swing.JPanel();
        loansPageTitlePanel = new javax.swing.JPanel();
        loansPageTitle = new javax.swing.JLabel();
        loansPageTitleButton = new javax.swing.JButton();
        loansPageComboBox = new javax.swing.JComboBox<>();
        loansPageTablePanel = new javax.swing.JPanel();
        loanPageLoanInstitutionInfo = new javax.swing.JLabel();
        loanPageLoanAmountInfo = new javax.swing.JLabel();
        loanPageLoanDateInfo = new javax.swing.JLabel();
        loanPageLowPayment = new javax.swing.JLabel();
        loanPagePaymentSlider = new javax.swing.JSlider();
        loanPageHighPayment = new javax.swing.JLabel();
        loansPageExtraInfo1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        loansPageExtraInfo2 = new javax.swing.JLabel();
        loansPageHelpScrollPane = new javax.swing.JScrollPane();
        loansPageHelpTextArea = new javax.swing.JTextArea();
        spendingsPagePanel = new javax.swing.JPanel();
        spendingsPageTitlePanel = new javax.swing.JPanel();
        spendingsPageTitle = new javax.swing.JLabel();
        spendingsPageTitleButton = new javax.swing.JButton();
        spendingsPageComboBox = new javax.swing.JComboBox<>();
        spendingsPageGraphPanel = new javax.swing.JPanel();
        spendingsPageBriefingScrollArea = new javax.swing.JScrollPane();
        spendingsPageBriefingArea = new javax.swing.JTextArea();
        spendingsPageTextScrollArea = new javax.swing.JScrollPane();
        spendingsPageHelpArea = new javax.swing.JTextArea();
        transactionsPagePanel = new javax.swing.JPanel();
        transactionsPageTitlePanel = new javax.swing.JPanel();
        transactionsPageTitle = new javax.swing.JLabel();
        transactionsPageTitleButton = new javax.swing.JButton();
        transactionsPageComboBox = new javax.swing.JComboBox<>();
        transactionsPageTablePanel = new javax.swing.JPanel();
        transactionsPageTableScrollArea = new javax.swing.JScrollPane();
        transactionsPageTable = new javax.swing.JTable();
        transactionsPageScrollArea = new javax.swing.JScrollPane();
        transactionsPageBriefingArea = new javax.swing.JTextArea();
        transactionsPageHelpScrollArea = new javax.swing.JScrollPane();
        transactionsPageHelpArea = new javax.swing.JTextArea();
        trendsPagePanel = new javax.swing.JPanel();
        trendsPageTitlePanel = new javax.swing.JPanel();
        trendsPageTitle = new javax.swing.JLabel();
        trendsPageTitleButton = new javax.swing.JButton();
        trendsPageComboBox = new javax.swing.JComboBox<>();
        trendsPageGraphPanel = new javax.swing.JPanel();
        trendsPageBriefingScrollArea = new javax.swing.JScrollPane();
        trendsPageBriefingArea = new javax.swing.JTextArea();
        trendsPageHelpScrollArea = new javax.swing.JScrollPane();
        trendsPageHelpArea = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        fileButton = new javax.swing.JMenu();
        quitButton = new javax.swing.JMenuItem();
        pagesButton = new javax.swing.JMenu();
        homePageButton = new javax.swing.JMenuItem();
        accountsPageButton = new javax.swing.JMenuItem();
        budgetsPageButton = new javax.swing.JMenuItem();
        loansPageButton = new javax.swing.JMenuItem();
        spendingsPageButton = new javax.swing.JMenuItem();
        transactionsPageButton = new javax.swing.JMenuItem();
        trendsPageButton = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 625));
        getContentPane().setLayout(new java.awt.CardLayout());

        tabbedPane.setPreferredSize(new java.awt.Dimension(1200, 625));
        tabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabbedPaneStateChanged(evt);
            }
        });

        homePagePanel.setLayout(new java.awt.BorderLayout());

        homePageTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        homePageTitle.setText("Home Page");
        homePagePanel.add(homePageTitle, java.awt.BorderLayout.PAGE_START);

        homePageTextArea.setEditable(false);
        homePageTextArea.setColumns(20);
        homePageTextArea.setLineWrap(true);
        homePageTextArea.setRows(5);
        homePageTextArea.setText("   Hello and welcome to your personal financial portal! At the top of the page you can see a list of tabs, which all have your financial data displayed in a convenient way for you. This portal is meant to be a tool for you to use to make the most informed decisions financially that you can.\n\n   Each tab has a button at the top for you to select the information you seek (institution, date, type, etc.). As of right now, it is expected of the user to know exactly what data they are looking for. The goal is to input all the data from the data source (a database for right now) and create a drop down list of all the information you seek to take away the need for the user to know exactly what they are looking for.\n\n   The pages and their functions are as follows:\n\n  - Accounts page: Centralized location for user's accounts (savings, checking, retirement, etc.)\n  - Budgets page: Display a user's payments and how much more they need to complete the payments\n  - Loans page: Display/interact with the user's loans/loan payoff plan\n  - Spendings page: Display the user's spendings (based on groups)\n  - Transactions page: Displays the user's transactions as a list\n  - Trends page: Displays groupings similar to the spendings over the span of time");
        homePageTextArea.setWrapStyleWord(true);
        homePageTextArea.setDragEnabled(false);
        homePageTextArea.setPreferredSize(new java.awt.Dimension(600, 625));
        homePageTextPane.setViewportView(homePageTextArea);

        homePagePanel.add(homePageTextPane, java.awt.BorderLayout.CENTER);

        tabbedPane.addTab("Home Page", homePagePanel);

        accountsPagePanel.setLayout(new java.awt.BorderLayout());

        accountsPagePanelTitle.setText("Accounts Page");
        accountsPageTitlePanel.add(accountsPagePanelTitle);

        accountsPageTitleButton.setText("Load Data");
        accountsPageTitleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountsPageTitleButtonActionPerformed(evt);
            }
        });
        accountsPageTitlePanel.add(accountsPageTitleButton);

        accountsPageComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountsPageComboBoxActionPerformed(evt);
            }
        });
        accountsPageTitlePanel.add(accountsPageComboBox);

        accountsPagePanel.add(accountsPageTitlePanel, java.awt.BorderLayout.PAGE_START);

        accountsPageTablePanel.setPreferredSize(new java.awt.Dimension(400, 625));

        accountsPageTableScrollPane.setPreferredSize(new java.awt.Dimension(550, 535));

        accountsPageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Amount", "Institution", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        accountsPageTable.setPreferredSize(new java.awt.Dimension(400, 625));
        accountsPageTable.setSize(new java.awt.Dimension(400, 625));
        accountsPageTable.getTableHeader().setReorderingAllowed(false);
        accountsPageTableScrollPane.setViewportView(accountsPageTable);
        if (accountsPageTable.getColumnModel().getColumnCount() > 0) {
            accountsPageTable.getColumnModel().getColumn(0).setResizable(false);
            accountsPageTable.getColumnModel().getColumn(1).setResizable(false);
            accountsPageTable.getColumnModel().getColumn(2).setResizable(false);
        }

        accountsPageTablePanel.add(accountsPageTableScrollPane);

        accountsPagePanel.add(accountsPageTablePanel, java.awt.BorderLayout.CENTER);

        accountsPageBriefingPane.setPreferredSize(new java.awt.Dimension(300, 625));

        accountsPageBriefingTextArea.setColumns(20);
        accountsPageBriefingTextArea.setLineWrap(true);
        accountsPageBriefingTextArea.setRows(5);
        accountsPageBriefingTextArea.setText("   Hello and welcome to your accounts page! On this page you will see a list of all your account types and the institutions they belong to.\n\n   To load the data, please select the \"Load Data\" button. Then the drop down menu should fill up with all of the institutions you can choose from. Just select the institution you wish to see, and the table of that institution should be displayed.");
        accountsPageBriefingTextArea.setWrapStyleWord(true);
        accountsPageBriefingTextArea.setDragEnabled(false);
        accountsPageBriefingTextArea.setPreferredSize(new java.awt.Dimension(300, 500));
        accountsPageBriefingTextArea.setSize(new java.awt.Dimension(300, 500));
        accountsPageBriefingPane.setViewportView(accountsPageBriefingTextArea);

        accountsPagePanel.add(accountsPageBriefingPane, java.awt.BorderLayout.LINE_START);

        accountsPageHelpPane.setPreferredSize(new java.awt.Dimension(300, 625));

        accountsPageHelpTetArea.setColumns(20);
        accountsPageHelpTetArea.setLineWrap(true);
        accountsPageHelpTetArea.setRows(5);
        accountsPageHelpTetArea.setText("   The type of the account will be listed under the \"Type\" column, while the name of the institution in which that accounts is will be listed under the \"Institution\" column, and finally the amount in that account will be displayed in the \"Amount\" column of the table.");
        accountsPageHelpTetArea.setWrapStyleWord(true);
        accountsPageHelpTetArea.setPreferredSize(new java.awt.Dimension(300, 500));
        accountsPageHelpTetArea.setSize(new java.awt.Dimension(300, 500));
        accountsPageHelpPane.setViewportView(accountsPageHelpTetArea);

        accountsPagePanel.add(accountsPageHelpPane, java.awt.BorderLayout.LINE_END);

        tabbedPane.addTab("Accounts", accountsPagePanel);

        budgetsPagePanel.setLayout(new java.awt.BorderLayout());

        budgetsPageTitle.setText("Budgets Page");
        budgetsPageTitlePanel.add(budgetsPageTitle);

        budgetsPageTitleButton.setText("Load Data");
        budgetsPageTitleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                budgetsPageTitleButtonActionPerformed(evt);
            }
        });
        budgetsPageTitlePanel.add(budgetsPageTitleButton);

        budgetsPageComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                budgetsPageComboBoxActionPerformed(evt);
            }
        });
        budgetsPageTitlePanel.add(budgetsPageComboBox);

        budgetsPagePanel.add(budgetsPageTitlePanel, java.awt.BorderLayout.PAGE_START);

        budgetsPageGraphPanel.setPreferredSize(new java.awt.Dimension(280, 500));
        budgetsPageGraphPanel.setSize(new java.awt.Dimension(280, 500));
        budgetsPagePanel.add(budgetsPageGraphPanel, java.awt.BorderLayout.CENTER);

        budgetsPageTextScrollPane.setPreferredSize(new java.awt.Dimension(275, 500));
        budgetsPageTextScrollPane.setSize(new java.awt.Dimension(275, 500));

        budgetsPageBriefingTextArea.setEditable(false);
        budgetsPageBriefingTextArea.setColumns(20);
        budgetsPageBriefingTextArea.setLineWrap(true);
        budgetsPageBriefingTextArea.setRows(5);
        budgetsPageBriefingTextArea.setText("   Hello and welcome to your budgeting page! On this page you will see a type of budget, the total amout for the month and the amount left to be paid.\n\n   To load the data, please select the \"Load Data\" button. Then a graph should appear with the first budget. The drop down menu should fill up with all of the budgets you can choose from. Just select the budget you wish to see, and the graph of that budget should appear in the middle section.");
        budgetsPageBriefingTextArea.setWrapStyleWord(true);
        budgetsPageBriefingTextArea.setPreferredSize(new java.awt.Dimension(275, 500));
        budgetsPageBriefingTextArea.setSize(new java.awt.Dimension(275, 500));
        budgetsPageTextScrollPane.setViewportView(budgetsPageBriefingTextArea);

        budgetsPagePanel.add(budgetsPageTextScrollPane, java.awt.BorderLayout.LINE_START);

        budgetsPageHelpScrollArea.setPreferredSize(new java.awt.Dimension(275, 500));
        budgetsPageHelpScrollArea.setSize(new java.awt.Dimension(275, 500));

        budgetsPageHelpTextArea.setEditable(false);
        budgetsPageHelpTextArea.setColumns(20);
        budgetsPageHelpTextArea.setLineWrap(true);
        budgetsPageHelpTextArea.setRows(5);
        budgetsPageHelpTextArea.setText("   The red color represents how much of the monthly budget you have paid so far. The blue color represents how much of the budget you have left to pay off.\n\n   If only one color is shown, then either all or none of the budget needs to be paid for.");
        budgetsPageHelpTextArea.setWrapStyleWord(true);
        budgetsPageHelpTextArea.setPreferredSize(new java.awt.Dimension(275, 500));
        budgetsPageHelpTextArea.setSize(new java.awt.Dimension(275, 500));
        budgetsPageHelpScrollArea.setViewportView(budgetsPageHelpTextArea);

        budgetsPagePanel.add(budgetsPageHelpScrollArea, java.awt.BorderLayout.LINE_END);

        tabbedPane.addTab("Budgets", budgetsPagePanel);

        loansPagePanel.setLayout(new java.awt.BorderLayout());

        loansPageTitle.setText("Loans Page");
        loansPageTitlePanel.add(loansPageTitle);

        loansPageTitleButton.setText("Load Data");
        loansPageTitleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loansPageTitleButtonActionPerformed(evt);
            }
        });
        loansPageTitlePanel.add(loansPageTitleButton);

        loansPageComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loansPageComboBoxActionPerformed(evt);
            }
        });
        loansPageTitlePanel.add(loansPageComboBox);

        loansPagePanel.add(loansPageTitlePanel, java.awt.BorderLayout.PAGE_START);

        loansPageTablePanel.setLayout(new java.awt.GridLayout(3, 3));

        loanPageLoanInstitutionInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loanPageLoanInstitutionInfo.setText("Institution: N/A");
        loansPageTablePanel.add(loanPageLoanInstitutionInfo);

        loanPageLoanAmountInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loanPageLoanAmountInfo.setText("Amount: N/A");
        loansPageTablePanel.add(loanPageLoanAmountInfo);

        loanPageLoanDateInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loanPageLoanDateInfo.setText("Date: N/A");
        loansPageTablePanel.add(loanPageLoanDateInfo);

        loanPageLowPayment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loanPageLowPayment.setText("0");
        loansPageTablePanel.add(loanPageLowPayment);

        loanPagePaymentSlider.setEnabled(false);
        loanPagePaymentSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                loanPagePaymentSliderStateChanged(evt);
            }
        });
        loansPageTablePanel.add(loanPagePaymentSlider);

        loanPageHighPayment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loanPageHighPayment.setText("-");
        loansPageTablePanel.add(loanPageHighPayment);

        loansPageExtraInfo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loansPageExtraInfo1.setText("Estimated payoff date: N/A");
        loansPageTablePanel.add(loansPageExtraInfo1);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loansPageTablePanel.add(jLabel4);

        loansPageExtraInfo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loansPageExtraInfo2.setText("New payoff date: N/A");
        loansPageTablePanel.add(loansPageExtraInfo2);

        loansPagePanel.add(loansPageTablePanel, java.awt.BorderLayout.CENTER);

        loansPageHelpTextArea.setEditable(false);
        loansPageHelpTextArea.setColumns(20);
        loansPageHelpTextArea.setLineWrap(true);
        loansPageHelpTextArea.setRows(5);
        loansPageHelpTextArea.setText("   Hello and welcome to your loans page. This page will display the loan that you requested when you select it from the drop down menu.\n\n   The institution, amount, and due date will be displayed. The slider represents how much extra of the payment for the month you would like to pay. Below the slider will be the adjusted loan payoff date assuming payments would remain the same.");
        loansPageHelpTextArea.setWrapStyleWord(true);
        loansPageHelpScrollPane.setViewportView(loansPageHelpTextArea);

        loansPagePanel.add(loansPageHelpScrollPane, java.awt.BorderLayout.LINE_START);

        tabbedPane.addTab("Loans", loansPagePanel);

        spendingsPagePanel.setLayout(new java.awt.BorderLayout());

        spendingsPageTitle.setText("Spendings Page");
        spendingsPageTitlePanel.add(spendingsPageTitle);

        spendingsPageTitleButton.setText("Load Data");
        spendingsPageTitleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spendingsPageTitleButtonActionPerformed(evt);
            }
        });
        spendingsPageTitlePanel.add(spendingsPageTitleButton);

        spendingsPageComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spendingsPageComboBoxActionPerformed(evt);
            }
        });
        spendingsPageTitlePanel.add(spendingsPageComboBox);

        spendingsPagePanel.add(spendingsPageTitlePanel, java.awt.BorderLayout.PAGE_START);
        spendingsPagePanel.add(spendingsPageGraphPanel, java.awt.BorderLayout.CENTER);

        spendingsPageBriefingArea.setColumns(20);
        spendingsPageBriefingArea.setLineWrap(true);
        spendingsPageBriefingArea.setRows(5);
        spendingsPageBriefingArea.setText("   Hello and welcome to your spendings page! On this page you will see all the spendings, the time of the spending, and the amount that spending procurred.\n\n   To load the data, please select the \"Load Data\" button. Then a graph should appear with the years spendings. The drop down menu should fill up with all of the spendings you can choose from. Just select the spending you wish to see, and the graph of that spending should appear in the middle section.");
        spendingsPageBriefingArea.setWrapStyleWord(true);
        spendingsPageBriefingScrollArea.setViewportView(spendingsPageBriefingArea);

        spendingsPagePanel.add(spendingsPageBriefingScrollArea, java.awt.BorderLayout.LINE_START);

        spendingsPageHelpArea.setColumns(20);
        spendingsPageHelpArea.setLineWrap(true);
        spendingsPageHelpArea.setRows(5);
        spendingsPageHelpArea.setText("   When a graph appears, each bar represents a different spending for that month. There may be one in a month, or there may be more, and then a legend will appear along the bottom of the graph representing the color of the bars.");
        spendingsPageHelpArea.setWrapStyleWord(true);
        spendingsPageTextScrollArea.setViewportView(spendingsPageHelpArea);

        spendingsPagePanel.add(spendingsPageTextScrollArea, java.awt.BorderLayout.LINE_END);

        tabbedPane.addTab("Spendings", spendingsPagePanel);

        transactionsPagePanel.setLayout(new java.awt.BorderLayout());

        transactionsPageTitle.setText("Transactions Page");
        transactionsPageTitlePanel.add(transactionsPageTitle);

        transactionsPageTitleButton.setText("Load Data");
        transactionsPageTitleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionsPageTitleButtonActionPerformed(evt);
            }
        });
        transactionsPageTitlePanel.add(transactionsPageTitleButton);

        transactionsPageComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionsPageComboBoxActionPerformed(evt);
            }
        });
        transactionsPageTitlePanel.add(transactionsPageComboBox);

        transactionsPagePanel.add(transactionsPageTitlePanel, java.awt.BorderLayout.PAGE_START);

        transactionsPageTableScrollArea.setPreferredSize(new java.awt.Dimension(550, 535));

        transactionsPageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Amount", "Date", "Institution"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        transactionsPageTable.setPreferredSize(new java.awt.Dimension(225, 535));
        transactionsPageTable.getTableHeader().setReorderingAllowed(false);
        transactionsPageTableScrollArea.setViewportView(transactionsPageTable);
        if (transactionsPageTable.getColumnModel().getColumnCount() > 0) {
            transactionsPageTable.getColumnModel().getColumn(0).setResizable(false);
            transactionsPageTable.getColumnModel().getColumn(1).setResizable(false);
            transactionsPageTable.getColumnModel().getColumn(2).setResizable(false);
        }

        transactionsPageTablePanel.add(transactionsPageTableScrollArea);

        transactionsPagePanel.add(transactionsPageTablePanel, java.awt.BorderLayout.CENTER);

        transactionsPageScrollArea.setPreferredSize(new java.awt.Dimension(300, 84));

        transactionsPageBriefingArea.setColumns(20);
        transactionsPageBriefingArea.setLineWrap(true);
        transactionsPageBriefingArea.setRows(5);
        transactionsPageBriefingArea.setText("   Hello and welcome to your transactions page! On this page you will see the amount, date, and institution of the transactions.\n\n   To load the data, please select the \"Load Data\" button. Then the month's transactions will appear. The drop down menu will also fill up with other months/years worth of data to be selected. Just select the month/year you would like and the table should reappear with that month/year's data.");
        transactionsPageBriefingArea.setWrapStyleWord(true);
        transactionsPageScrollArea.setViewportView(transactionsPageBriefingArea);

        transactionsPagePanel.add(transactionsPageScrollArea, java.awt.BorderLayout.LINE_START);

        transactionsPageHelpScrollArea.setPreferredSize(new java.awt.Dimension(300, 84));

        transactionsPageHelpArea.setColumns(20);
        transactionsPageHelpArea.setLineWrap(true);
        transactionsPageHelpArea.setRows(5);
        transactionsPageHelpArea.setText("   The amount of the transaction will be listed under the \"Amount\" column, while the date of the transaction will be listed under the \"Date\" column, and finally the institution that the transaction went to will be displayed in the \"Institution\" column of the table.");
        transactionsPageHelpArea.setWrapStyleWord(true);
        transactionsPageHelpScrollArea.setViewportView(transactionsPageHelpArea);

        transactionsPagePanel.add(transactionsPageHelpScrollArea, java.awt.BorderLayout.LINE_END);

        tabbedPane.addTab("Transactions", transactionsPagePanel);

        trendsPagePanel.setLayout(new java.awt.BorderLayout());

        trendsPageTitle.setText("Trends Page");
        trendsPageTitlePanel.add(trendsPageTitle);

        trendsPageTitleButton.setText("Load Data");
        trendsPageTitleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trendsPageTitleButtonActionPerformed(evt);
            }
        });
        trendsPageTitlePanel.add(trendsPageTitleButton);

        trendsPageComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trendsPageComboBoxActionPerformed(evt);
            }
        });
        trendsPageTitlePanel.add(trendsPageComboBox);

        trendsPagePanel.add(trendsPageTitlePanel, java.awt.BorderLayout.PAGE_START);
        trendsPagePanel.add(trendsPageGraphPanel, java.awt.BorderLayout.CENTER);

        trendsPageBriefingArea.setColumns(20);
        trendsPageBriefingArea.setLineWrap(true);
        trendsPageBriefingArea.setRows(5);
        trendsPageBriefingArea.setText("   Hello and welcome to your trends page! On this page you will see a line graph of groups of transactions over a span of time.\n\n   To load the data, please select the \"Load Data\" button. Then a graph should appear with the years trend graph. The drop down menu should fill up with all of the years which you can choose from. Just select the year you wish to see, and the line graph of that yaer should appear in the middle section.");
        trendsPageBriefingArea.setWrapStyleWord(true);
        trendsPageBriefingScrollArea.setViewportView(trendsPageBriefingArea);

        trendsPagePanel.add(trendsPageBriefingScrollArea, java.awt.BorderLayout.LINE_START);

        trendsPageHelpArea.setColumns(20);
        trendsPageHelpArea.setLineWrap(true);
        trendsPageHelpArea.setRows(5);
        trendsPageHelpArea.setText("   When a graph appears, each line represents a different trend for that month/year. There may be one line, or there may be more, and then a legend will appear along the bottom of the graph representing the color of the lines.");
        trendsPageHelpArea.setWrapStyleWord(true);
        trendsPageHelpScrollArea.setViewportView(trendsPageHelpArea);

        trendsPagePanel.add(trendsPageHelpScrollArea, java.awt.BorderLayout.LINE_END);

        tabbedPane.addTab("Trends", trendsPagePanel);

        getContentPane().add(tabbedPane, "card2");

        fileButton.setText("File");

        quitButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, 0));
        quitButton.setText("Quit");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });
        fileButton.add(quitButton);

        menuBar.add(fileButton);

        pagesButton.setText("Pages");

        homePageButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, 0));
        homePageButton.setText("Home");
        homePageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageButtonActionPerformed(evt);
            }
        });
        pagesButton.add(homePageButton);

        accountsPageButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, 0));
        accountsPageButton.setText("Accounts");
        accountsPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountsPageButtonActionPerformed(evt);
            }
        });
        pagesButton.add(accountsPageButton);

        budgetsPageButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, 0));
        budgetsPageButton.setText("Budgets");
        budgetsPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                budgetsPageButtonActionPerformed(evt);
            }
        });
        pagesButton.add(budgetsPageButton);

        loansPageButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_4, 0));
        loansPageButton.setText("Loans");
        loansPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loansPageButtonActionPerformed(evt);
            }
        });
        pagesButton.add(loansPageButton);

        spendingsPageButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_5, 0));
        spendingsPageButton.setText("Spending");
        spendingsPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spendingsPageButtonActionPerformed(evt);
            }
        });
        pagesButton.add(spendingsPageButton);

        transactionsPageButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_6, 0));
        transactionsPageButton.setText("Transactions");
        transactionsPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionsPageButtonActionPerformed(evt);
            }
        });
        pagesButton.add(transactionsPageButton);

        trendsPageButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_7, 0));
        trendsPageButton.setText("Trends");
        trendsPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trendsPageButtonActionPerformed(evt);
            }
        });
        pagesButton.add(trendsPageButton);

        menuBar.add(pagesButton);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homePageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageButtonActionPerformed
        enablePage(0);
    }//GEN-LAST:event_homePageButtonActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitButtonActionPerformed

    private void accountsPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountsPageButtonActionPerformed
        enablePage(1);
    }//GEN-LAST:event_accountsPageButtonActionPerformed

    private void budgetsPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_budgetsPageButtonActionPerformed
        enablePage(2);
    }//GEN-LAST:event_budgetsPageButtonActionPerformed

    private void loansPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loansPageButtonActionPerformed
        enablePage(3);
    }//GEN-LAST:event_loansPageButtonActionPerformed

    private void spendingsPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spendingsPageButtonActionPerformed
        enablePage(4);
    }//GEN-LAST:event_spendingsPageButtonActionPerformed

    private void transactionsPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionsPageButtonActionPerformed
        getInfo("frame of reference", "transactions");
        enablePage(5);
    }//GEN-LAST:event_transactionsPageButtonActionPerformed

    private void trendsPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trendsPageButtonActionPerformed
        enablePage(6);
    }//GEN-LAST:event_trendsPageButtonActionPerformed

    private void tabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabbedPaneStateChanged

    }//GEN-LAST:event_tabbedPaneStateChanged

    private void accountsPageTitleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountsPageTitleButtonActionPerformed
        accountsPageComboBox.addItem("69420");
        accountsPageComboBox.addItem("420");
        for (int i = 1; i <= 10; i++) {
            DefaultTableModel model = (DefaultTableModel) accountsPageTable.getModel();
            Object[] list = {100 * i, "Centris", "Checking"};
            model.addRow(list);
        }
    }//GEN-LAST:event_accountsPageTitleButtonActionPerformed

    private void budgetsPageTitleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_budgetsPageTitleButtonActionPerformed
        insertIntoBudgetsCombo();
        addBarGraph(getSpendings());
    }//GEN-LAST:event_budgetsPageTitleButtonActionPerformed

    private void loansPageTitleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loansPageTitleButtonActionPerformed
        loanPagePaymentSlider.enable();
        ArrayList<Loan> loans = new ArrayList<>();
        loans.add(new Loan(1000, "January 1 2020", "Centris", 3.4, 1, 500));
        inputLoanIntoLoanPage(loans);
    }//GEN-LAST:event_loansPageTitleButtonActionPerformed

    private void spendingsPageTitleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spendingsPageTitleButtonActionPerformed
        addRingChart();
    }//GEN-LAST:event_spendingsPageTitleButtonActionPerformed

    private void transactionsPageTitleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionsPageTitleButtonActionPerformed

    }//GEN-LAST:event_transactionsPageTitleButtonActionPerformed

    private void trendsPageTitleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trendsPageTitleButtonActionPerformed
        trendsPageGraphPanel.removeAll();
        addLineGraph();
    }//GEN-LAST:event_trendsPageTitleButtonActionPerformed

    private void budgetsPageComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_budgetsPageComboBoxActionPerformed
//        String text = (String) budgetsPageComboBox.getSelectedItem(); // Get item selected
//        String[] split = text.split(", "); // Split selected data by ', '
//        ArrayList<Spending> spendings = getSpendings(); // Get all spendings
//        ArrayList<Spending> newSpendings = new ArrayList<>(); // Create new arraylist
//        spendings.stream().filter((s) -> (s.getType().equals(split[0]) && s.getSDF().equals(split[1]))).forEachOrdered((s) -> { // Iterating through each spending, and if the type equals the first token and SDF equals the second token
//            newSpendings.add(s); // Add spending to new arraylist
//        });
//        addBarGraph(newSpendings); // Add bar graph with new arraylist
        budgetsPageGraphPanel.removeAll();
//    for (int i = 0; i < budgetsPageGraphPanel.getComponentCount(); i++){
//        budgetsPageGraphPanel.remove(i);
//    }
    }//GEN-LAST:event_budgetsPageComboBoxActionPerformed

    private void loanPagePaymentSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_loanPagePaymentSliderStateChanged
        String[] split = loanPageLoanAmountInfo.getText().split(" ");
        double loanAmt = Double.parseDouble(split[1].substring(1));
        double monthPayment = loanAmt / 12;
        int paymentAmt = loanPagePaymentSlider.getValue();
        double newMonthPayment = monthPayment + paymentAmt;
        int noMonths = (int) (loanAmt / newMonthPayment) + 1;
        if (noMonths == 13){
            noMonths = 12;
        }
        noMonths -= 12;
        loanPageHighPayment.setText(String.valueOf(loanAmt * paymentAmt / 1000));
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MMM dd yyyy");
        LocalDate date = LocalDate.parse(loanPageLoanDateInfo.getText().substring(6), formatter);
        date = date.plusMonths(noMonths);
        String newDate = date.format(DateTimeFormatter.ofPattern("MMM dd yyyy"));
        loansPageExtraInfo2.setText("New payoff date: " + newDate);
        loansPageExtraInfo1.setText("Estimated payoff date: " + loanPageLoanDateInfo.getText());
    }//GEN-LAST:event_loanPagePaymentSliderStateChanged

    public void updateLoanExtraInfo1(int amt) {
        loansPageExtraInfo1.setText("Estimated payoff date: ");
    }

    private void loansPageComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loansPageComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loansPageComboBoxActionPerformed

    private void spendingsPageComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spendingsPageComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_spendingsPageComboBoxActionPerformed

    private void transactionsPageComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionsPageComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transactionsPageComboBoxActionPerformed

    private void trendsPageComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trendsPageComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trendsPageComboBoxActionPerformed

    private void accountsPageComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountsPageComboBoxActionPerformed
        DefaultTableModel model = (DefaultTableModel) accountsPageTable.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            model.removeRow(i);
        }
    }//GEN-LAST:event_accountsPageComboBoxActionPerformed

    public ArrayList<Spending> getSpendings() {
        ArrayList<Spending> spendings = new ArrayList<>();
        spendings.add(new Spending(600, "January 1 2020", "Utilities"));
        spendings.add(new Spending(500, "January 1 2020", "Car Bill"));
        spendings.add(new Spending(250, "January 1 2020", "Food"));
        spendings.add(new Spending(200, "January 1 2020", "Water Bill"));
        spendings.add(new Spending(400, "January 1 2020", "Gas"));
        spendings.add(new Spending(600, "January 2 2020", "Utilities"));
        spendings.add(new Spending(500, "January 2 2020", "Car Bill"));
        spendings.add(new Spending(250, "January 2 2020", "Food"));
        spendings.add(new Spending(200, "January 2 2020", "Water Bill"));
        spendings.add(new Spending(400, "January 2 2020", "Gas"));
        spendings.add(new Spending(600, "March 1 2020", "Utilities"));
        spendings.add(new Spending(500, "March 1 2020", "Car Bill"));
        spendings.add(new Spending(250, "March 1 2020", "Food"));
        spendings.add(new Spending(200, "March 1 2020", "Water Bill"));
        spendings.add(new Spending(400, "March 1 2020", "Gas"));
        spendings.add(new Spending(600, "April 1 2020", "Utilities"));
        spendings.add(new Spending(500, "April 1 2020", "Car Bill"));
        spendings.add(new Spending(250, "April 1 2020", "Food"));
        spendings.add(new Spending(200, "April 1 2020", "Water Bill"));
        spendings.add(new Spending(400, "April 1 2020", "Gas"));
        spendings.add(new Spending(600, "May 1 2020", "Utilities"));
        spendings.add(new Spending(500, "May 1 2020", "Car Bill"));
        spendings.add(new Spending(250, "May 1 2020", "Food"));
        spendings.add(new Spending(200, "May 1 2020", "Water Bill"));
        spendings.add(new Spending(400, "May 1 2020", "Gas"));
        return spendings;
    }

    public void insertIntoBudgetsCombo() {
        ArrayList<Spending> spendings = getSpendings();
        spendings.forEach((s) -> {
            budgetsPageComboBox.addItem(s.getType() + ", " + s.getSDF());
        });
    }

    public void addBarGraph(ArrayList<Spending> spendings) {
        budgetsPageGraphPanel.removeAll();
        DefaultCategoryDataset data = new DefaultCategoryDataset();
        spendings.forEach((Spending s) -> {
            data.addValue(s.getAmount(), s.getType(), s.getSDF());
        });
        JFreeChart chart = ChartFactory.createBarChart("Budgets Graph for " + spendings.get(0).getFrame(), "Type", "Amount", data);
        ChartPanel panel = new ChartPanel(chart);
        budgetsPageGraphPanel.add(panel);
    }

    public void addLineGraph() {
        ArrayList<Trend> trends = new ArrayList<>();
        trends.add(new Trend(100, "January 1 2020", "Food"));
        trends.add(new Trend(200, "January 1 2020", "Gas"));
        trends.add(new Trend(300, "January 1 2020", "Utilities"));
        trends.add(new Trend(400, "January 1 2020", "Grocery"));
        trends.add(new Trend(500, "January 1 2020", "Bills"));
        trends.add(new Trend(600, "January 1 2020", "Movies"));
        trends.add(new Trend(200, "May 1 2020", "Food"));
        trends.add(new Trend(300, "May 1 2020", "Gas"));
        trends.add(new Trend(400, "May 1 2020", "Utilities"));
        trends.add(new Trend(500, "May 1 2020", "Grocery"));
        trends.add(new Trend(600, "May 1 2020", "Bills"));
        trends.add(new Trend(700, "May 1 2020", "Movies"));
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        trends.forEach((t) -> {
            dataset.addValue(t.getAmount(), t.getType(), t.getSDF());
        });
        JFreeChart chart = ChartFactory.createLineChart("Trends Graph", "Frame", "Type", dataset);
        ChartPanel panel = new ChartPanel(chart);
        trendsPageGraphPanel.add(panel);
    }

    public void addPieChart() {
        ArrayList<Budget> budgets = new ArrayList<>();
        budgets.add(new Budget(200, "May 1 2020", 150, "Food"));
        budgets.add(new Budget(300, "May 1 2020", 150, "Gas"));
        DefaultCategoryDataset source = new DefaultCategoryDataset();
        budgets.forEach((b) -> {
            source.addValue(b.getPaid(), b.getSDF(), b.getType());
        });
        PieDataset dataset = new CategoryToPieDataset(source, TableOrder.BY_ROW, 0);
        JFreeChart chart = ChartFactory.createPieChart("Budget Graph for " + budgets.get(0).getSDF(), dataset);
        chart.removeLegend();
        ChartPanel panel = new ChartPanel(chart);
        spendingsPageGraphPanel.add(panel);
    }

    public void addRingChart() {
        ArrayList<Budget> budgets = new ArrayList<>();
        budgets.add(new Budget(200, "May 1 2020", 150, "Food"));
        budgets.add(new Budget(50, "May 1 2020", 50, "Remaining"));
        DefaultCategoryDataset source = new DefaultCategoryDataset();
        budgets.forEach((b) -> {
            source.addValue(b.getPaid(), b.getSDF(), b.getType());
        });
        PieDataset dataset = new CategoryToPieDataset(source, TableOrder.BY_ROW, 0);
        JFreeChart chart = ChartFactory.createRingChart("Budget Graph for " + budgets.get(0).getSDF(), dataset, false, false, Locale.US);
        chart.removeLegend();
        ChartPanel panel = new ChartPanel(chart);
        spendingsPageGraphPanel.add(panel);
    }

    public void inputLoanIntoLoanPage(ArrayList<Loan> loans) {
        loanPageLoanAmountInfo.setText("Amount: $" + String.valueOf(loans.get(0).getAmount()));
        loanPageLoanInstitutionInfo.setText("Institution: " + String.valueOf(loans.get(0).getInstitution()));
        loanPageLoanDateInfo.setText("Date: " + String.valueOf(loans.get(0).getSDF()));
    }

    public ArrayList<JButton> getButtons() {
        return buttons;
    }

    /**
     * Function to prompt the user to get the information they are seeking
     *
     * @param obj the type of object they want (frame of reference, type,
     * institution, etc.)
     * @param desInfo the type of that object they want (account, budget, loan,
     * etc.)
     * @return the string the user entered into the prompt
     */
    public String getInfo(String obj, String desInfo) {
        return JOptionPane.showInputDialog("Please enter the " + obj + " you seek for your " + desInfo + ":");
    }

    public int getTabSelected() {
        return tabbedPane.getSelectedIndex();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FinancialPortalFrameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FinancialPortalFrameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FinancialPortalFrameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FinancialPortalFrameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FinancialPortalFrameView().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane accountsPageBriefingPane;
    private javax.swing.JTextArea accountsPageBriefingTextArea;
    private javax.swing.JMenuItem accountsPageButton;
    private javax.swing.JComboBox<String> accountsPageComboBox;
    private javax.swing.JScrollPane accountsPageHelpPane;
    private javax.swing.JTextArea accountsPageHelpTetArea;
    private javax.swing.JPanel accountsPagePanel;
    private javax.swing.JLabel accountsPagePanelTitle;
    private javax.swing.JTable accountsPageTable;
    private javax.swing.JPanel accountsPageTablePanel;
    private javax.swing.JScrollPane accountsPageTableScrollPane;
    private javax.swing.JButton accountsPageTitleButton;
    private javax.swing.JPanel accountsPageTitlePanel;
    private javax.swing.JTextArea budgetsPageBriefingTextArea;
    private javax.swing.JMenuItem budgetsPageButton;
    private javax.swing.JComboBox<String> budgetsPageComboBox;
    private javax.swing.JPanel budgetsPageGraphPanel;
    private javax.swing.JScrollPane budgetsPageHelpScrollArea;
    private javax.swing.JTextArea budgetsPageHelpTextArea;
    private javax.swing.JPanel budgetsPagePanel;
    private javax.swing.JScrollPane budgetsPageTextScrollPane;
    private javax.swing.JLabel budgetsPageTitle;
    private javax.swing.JButton budgetsPageTitleButton;
    private javax.swing.JPanel budgetsPageTitlePanel;
    private javax.swing.JMenu fileButton;
    private javax.swing.JMenuItem homePageButton;
    private javax.swing.JPanel homePagePanel;
    private javax.swing.JTextArea homePageTextArea;
    private javax.swing.JScrollPane homePageTextPane;
    private javax.swing.JLabel homePageTitle;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel loanPageHighPayment;
    private javax.swing.JLabel loanPageLoanAmountInfo;
    private javax.swing.JLabel loanPageLoanDateInfo;
    private javax.swing.JLabel loanPageLoanInstitutionInfo;
    private javax.swing.JLabel loanPageLowPayment;
    private javax.swing.JSlider loanPagePaymentSlider;
    private javax.swing.JMenuItem loansPageButton;
    private javax.swing.JComboBox<String> loansPageComboBox;
    private javax.swing.JLabel loansPageExtraInfo1;
    private javax.swing.JLabel loansPageExtraInfo2;
    private javax.swing.JScrollPane loansPageHelpScrollPane;
    private javax.swing.JTextArea loansPageHelpTextArea;
    private javax.swing.JPanel loansPagePanel;
    private javax.swing.JPanel loansPageTablePanel;
    private javax.swing.JLabel loansPageTitle;
    private javax.swing.JButton loansPageTitleButton;
    private javax.swing.JPanel loansPageTitlePanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu pagesButton;
    private javax.swing.JMenuItem quitButton;
    private javax.swing.JTextArea spendingsPageBriefingArea;
    private javax.swing.JScrollPane spendingsPageBriefingScrollArea;
    private javax.swing.JMenuItem spendingsPageButton;
    private javax.swing.JComboBox<String> spendingsPageComboBox;
    private javax.swing.JPanel spendingsPageGraphPanel;
    private javax.swing.JTextArea spendingsPageHelpArea;
    private javax.swing.JPanel spendingsPagePanel;
    private javax.swing.JScrollPane spendingsPageTextScrollArea;
    private javax.swing.JLabel spendingsPageTitle;
    private javax.swing.JButton spendingsPageTitleButton;
    private javax.swing.JPanel spendingsPageTitlePanel;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTextArea transactionsPageBriefingArea;
    private javax.swing.JMenuItem transactionsPageButton;
    private javax.swing.JComboBox<String> transactionsPageComboBox;
    private javax.swing.JTextArea transactionsPageHelpArea;
    private javax.swing.JScrollPane transactionsPageHelpScrollArea;
    private javax.swing.JPanel transactionsPagePanel;
    private javax.swing.JScrollPane transactionsPageScrollArea;
    private javax.swing.JTable transactionsPageTable;
    private javax.swing.JPanel transactionsPageTablePanel;
    private javax.swing.JScrollPane transactionsPageTableScrollArea;
    private javax.swing.JLabel transactionsPageTitle;
    private javax.swing.JButton transactionsPageTitleButton;
    private javax.swing.JPanel transactionsPageTitlePanel;
    private javax.swing.JTextArea trendsPageBriefingArea;
    private javax.swing.JScrollPane trendsPageBriefingScrollArea;
    private javax.swing.JMenuItem trendsPageButton;
    private javax.swing.JComboBox<String> trendsPageComboBox;
    private javax.swing.JPanel trendsPageGraphPanel;
    private javax.swing.JTextArea trendsPageHelpArea;
    private javax.swing.JScrollPane trendsPageHelpScrollArea;
    private javax.swing.JPanel trendsPagePanel;
    private javax.swing.JLabel trendsPageTitle;
    private javax.swing.JButton trendsPageTitleButton;
    private javax.swing.JPanel trendsPageTitlePanel;
    // End of variables declaration//GEN-END:variables
}
